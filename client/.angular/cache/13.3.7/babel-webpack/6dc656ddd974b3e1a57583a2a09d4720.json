{"ast":null,"code":"import { map, Subject, tap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./http.service\";\nimport * as i2 from \"./alert.service\";\nexport let PostService = /*#__PURE__*/(() => {\n  class PostService {\n    constructor(httpService, alertService) {\n      this.httpService = httpService;\n      this.alertService = alertService;\n      this.$posts = [];\n      this.$post = {};\n      this.posts = new Subject();\n      this.post = new Subject();\n      this.posts.subscribe(posts => this.$posts = posts);\n    }\n\n    createPost(data) {\n      return this.httpService.createPost(data);\n    }\n\n    receiveAdminAllPost(query) {\n      return this.httpService.receiveAdminAllPost(query).subscribe(posts => {\n        this.posts.next(posts);\n      });\n    }\n\n    receiveAllPost(query) {\n      return this.httpService.receiveAdminAllPost();\n    }\n\n    deleteAdminAllPost(prop) {\n      return this.httpService.deleteAdminAllPost(prop.id).subscribe(() => {\n        this.$posts.splice(prop.index, 1);\n        this.posts.next(this.$posts);\n        this.alertService.success('You deleted post!');\n      }, () => {\n        this.alertService.warning(\"You can't delete post\");\n      });\n    }\n\n    receiveOnePost(id) {\n      return this.httpService.receiveOnePost(id).pipe(map(post => post)).subscribe(post => {\n        this.$post = post;\n        this.post.next(post);\n      });\n    }\n\n    getOnePost(id) {\n      return this.httpService.receiveOnePost(id);\n    }\n\n    updatePost(form, id) {\n      return this.httpService.updatePost(form, id).pipe(tap(console.log));\n    }\n\n  }\n\n  PostService.ɵfac = function PostService_Factory(t) {\n    return new (t || PostService)(i0.ɵɵinject(i1.HttpService), i0.ɵɵinject(i2.AlertService));\n  };\n\n  PostService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PostService,\n    factory: PostService.ɵfac,\n    providedIn: 'root'\n  });\n  return PostService;\n})();","map":null,"metadata":{},"sourceType":"module"}
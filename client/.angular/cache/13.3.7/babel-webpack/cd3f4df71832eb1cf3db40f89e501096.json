{"ast":null,"code":"import * as i2 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nconst _c0 = [[[\"\", \"quill-editor-toolbar\", \"\"]]];\nconst _c1 = [\"[quill-editor-toolbar]\"];\nconst defaultModules = {\n  toolbar: [['bold', 'italic', 'underline', 'strike'], ['blockquote', 'code-block'], [{\n    header: 1\n  }, {\n    header: 2\n  }], [{\n    list: 'ordered'\n  }, {\n    list: 'bullet'\n  }], [{\n    script: 'sub'\n  }, {\n    script: 'super'\n  }], [{\n    indent: '-1'\n  }, {\n    indent: '+1'\n  }], [{\n    direction: 'rtl'\n  }], [{\n    size: ['small', false, 'large', 'huge']\n  }], [{\n    header: [1, 2, 3, 4, 5, 6, false]\n  }], [{\n    color: []\n  }, {\n    background: []\n  }], [{\n    font: []\n  }], [{\n    align: []\n  }], ['clean'], ['link', 'image', 'video'] // link and image, video\n  ]\n};\n\nconst getFormat = (format, configFormat) => {\n  const passedFormat = format || configFormat;\n  return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n  providedIn: 'root',\n  factory: () => ({\n    modules: defaultModules\n  })\n});\n\nclass QuillService {\n  constructor(injector, config) {\n    this.config = config;\n    this.count = 0;\n    this.document = injector.get(DOCUMENT);\n\n    if (!this.config) {\n      this.config = {\n        modules: defaultModules\n      };\n    }\n  }\n\n  getQuill() {\n    this.count++;\n\n    if (!this.Quill && this.count === 1) {\n      this.$importPromise = new Promise(resolve => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b; // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n        // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n        // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n\n\n        const maybePatchedAddEventListener = this.document.addEventListener; // There're 2 types of Angular applications:\n        // 1) zone-full (by default)\n        // 2) zone-less\n        // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n        // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n        // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n        // this means the `zone.js` is not imported.\n        // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n        // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n        // eslint-disable-next-line @typescript-eslint/dot-notation\n\n        this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n        const quillImport = yield import('quill');\n        this.document.addEventListener = maybePatchedAddEventListener;\n        this.Quill = quillImport.default ? quillImport.default : quillImport; // Only register custom options and modules once\n\n        (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach(customOption => {\n          const newCustomOption = this.Quill.import(customOption.import);\n          newCustomOption.whitelist = customOption.whitelist;\n          this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n        });\n        (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({\n          implementation,\n          path\n        }) => {\n          this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n        });\n        resolve(this.Quill);\n      }));\n    }\n\n    return this.$importPromise;\n  }\n\n}\n\nQuillService.ɵfac = function QuillService_Factory(t) {\n  return new (t || QuillService)(i0.ɵɵinject(i0.Injector), i0.ɵɵinject(QUILL_CONFIG_TOKEN, 8));\n};\n\nQuillService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: QuillService,\n  factory: QuillService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Optional\n      }, {\n        type: Inject,\n        args: [QUILL_CONFIG_TOKEN]\n      }]\n    }];\n  }, null);\n})(); // eslint-disable-next-line @angular-eslint/directive-class-suffix\n\n\nclass QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    this.elementRef = elementRef;\n    this.cd = cd;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.required = false;\n    this.customToolbarPosition = 'top';\n    this.sanitize = false;\n    this.styles = null;\n    this.strict = true;\n    this.customOptions = [];\n    this.customModules = [];\n    this.preserveWhitespace = false;\n    this.trimOnValidation = false;\n    this.compareValues = false;\n    this.filterNull = false;\n    /*\n    https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n           provide default empty value\n    by default null\n           e.g. defaultEmptyValue=\"\" - empty string\n           <quill-editor\n      defaultEmptyValue=\"\"\n      formControlName=\"message\"\n    ></quill-editor>\n    */\n\n    this.defaultEmptyValue = null;\n    this.onEditorCreated = new EventEmitter();\n    this.onEditorChanged = new EventEmitter();\n    this.onContentChanged = new EventEmitter();\n    this.onSelectionChanged = new EventEmitter();\n    this.onFocus = new EventEmitter();\n    this.onBlur = new EventEmitter();\n    this.disabled = false; // used to store initial value before ViewInit\n\n    this.subscription = null;\n\n    this.valueGetter = (quillEditor, editorElement) => {\n      let html = editorElement.querySelector('.ql-editor').innerHTML;\n\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n\n      let modelValue = html;\n      const format = getFormat(this.format, this.service.config.format);\n\n      if (format === 'text') {\n        modelValue = quillEditor.getText();\n      } else if (format === 'object') {\n        modelValue = quillEditor.getContents();\n      } else if (format === 'json') {\n        try {\n          modelValue = JSON.stringify(quillEditor.getContents());\n        } catch (e) {\n          modelValue = quillEditor.getText();\n        }\n      }\n\n      return modelValue;\n    };\n\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n\n      if (format === 'html') {\n        if (this.sanitize) {\n          value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n        }\n\n        return quillEditor.clipboard.convert(value);\n      } else if (format === 'json') {\n        try {\n          return JSON.parse(value);\n        } catch (e) {\n          return [{\n            insert: value\n          }];\n        }\n      }\n\n      return value;\n    };\n\n    this.selectionChangeHandler = (range, oldRange, source) => {\n      const shouldTriggerOnModelTouched = !range && !!this.onModelTouched; // only emit changes when there's any listener\n\n      if (!this.onBlur.observers.length && !this.onFocus.observers.length && !this.onSelectionChanged.observers.length && !shouldTriggerOnModelTouched) {\n        return;\n      }\n\n      this.zone.run(() => {\n        if (range === null) {\n          this.onBlur.emit({\n            editor: this.quillEditor,\n            source\n          });\n        } else if (oldRange === null) {\n          this.onFocus.emit({\n            editor: this.quillEditor,\n            source\n          });\n        }\n\n        this.onSelectionChanged.emit({\n          editor: this.quillEditor,\n          oldRange,\n          range,\n          source\n        });\n\n        if (shouldTriggerOnModelTouched) {\n          this.onModelTouched();\n        }\n\n        this.cd.markForCheck();\n      });\n    };\n\n    this.textChangeHandler = (delta, oldDelta, source) => {\n      // only emit changes emitted by user interactions\n      const text = this.quillEditor.getText();\n      const content = this.quillEditor.getContents();\n      let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n\n      if (html === '<p><br></p>' || html === '<div><br></div>') {\n        html = this.defaultEmptyValue;\n      }\n\n      const trackChanges = this.trackChanges || this.service.config.trackChanges;\n      const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange; // only emit changes when there's any listener\n\n      if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n        return;\n      }\n\n      this.zone.run(() => {\n        if (shouldTriggerOnModelChange) {\n          this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n        }\n\n        this.onContentChanged.emit({\n          content,\n          delta,\n          editor: this.quillEditor,\n          html,\n          oldDelta,\n          source,\n          text\n        });\n        this.cd.markForCheck();\n      });\n    }; // eslint-disable-next-line max-len\n\n\n    this.editorChangeHandler = (event, current, old, source) => {\n      // only emit changes when there's any listener\n      if (!this.onEditorChanged.observers.length) {\n        return;\n      } // only emit changes emitted by user interactions\n\n\n      if (event === 'text-change') {\n        const text = this.quillEditor.getText();\n        const content = this.quillEditor.getContents();\n        let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n\n        if (html === '<p><br></p>' || html === '<div><br></div>') {\n          html = this.defaultEmptyValue;\n        }\n\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            content,\n            delta: current,\n            editor: this.quillEditor,\n            event,\n            html,\n            oldDelta: old,\n            source,\n            text\n          });\n          this.cd.markForCheck();\n        });\n      } else {\n        this.zone.run(() => {\n          this.onEditorChanged.emit({\n            editor: this.quillEditor,\n            event,\n            oldRange: old,\n            range: current,\n            source\n          });\n          this.cd.markForCheck();\n        });\n      }\n    };\n\n    this.document = injector.get(DOCUMENT);\n  }\n\n  static normalizeClassNames(classes) {\n    const classList = classes.trim().split(' ');\n    return classList.reduce((prev, cur) => {\n      const trimmed = cur.trim();\n\n      if (trimmed) {\n        prev.push(trimmed);\n      }\n\n      return prev;\n    }, []);\n  }\n\n  ngAfterViewInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (isPlatformServer(this.platformId)) {\n        return;\n      } // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\n      const Quill = yield this.service.getQuill();\n      this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n      const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n\n      if (toolbarElem) {\n        modules.toolbar = toolbarElem;\n      } else if (modules.toolbar === undefined) {\n        modules.toolbar = defaultModules.toolbar;\n      }\n\n      let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n\n      if (placeholder === undefined) {\n        placeholder = 'Insert text here ...';\n      }\n\n      if (this.styles) {\n        Object.keys(this.styles).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n\n      if (this.classes) {\n        this.addClasses(this.classes);\n      }\n\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      this.customModules.forEach(({\n        implementation,\n        path\n      }) => {\n        Quill.register(path, implementation);\n      });\n      let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n\n      if (!bounds) {\n        bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n      }\n\n      let debug = this.debug;\n\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n\n      let readOnly = this.readOnly;\n\n      if (!readOnly && this.readOnly !== false) {\n        readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n      }\n\n      let defaultEmptyValue = this.defaultEmptyValue;\n\n      if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n        defaultEmptyValue = this.service.config.defaultEmptyValue;\n      }\n\n      let scrollingContainer = this.scrollingContainer;\n\n      if (!scrollingContainer && this.scrollingContainer !== null) {\n        scrollingContainer = this.service.config.scrollingContainer === null || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n      }\n\n      let formats = this.formats;\n\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? [...this.service.config.formats] : this.service.config.formats === null ? null : undefined;\n      }\n\n      this.zone.runOutsideAngular(() => {\n        var _a, _b, _c;\n\n        this.quillEditor = new Quill(this.editorElem, {\n          bounds,\n          debug: debug,\n          formats: formats,\n          modules,\n          placeholder,\n          readOnly,\n          defaultEmptyValue,\n          scrollingContainer: scrollingContainer,\n          strict: this.strict,\n          theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n        }); // Set optional link placeholder, Quill has no native API for it so using workaround\n\n        if (this.linkPlaceholder) {\n          const tooltip = (_b = (_a = this.quillEditor) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.tooltip;\n          const input = (_c = tooltip === null || tooltip === void 0 ? void 0 : tooltip.root) === null || _c === void 0 ? void 0 : _c.querySelector('input[data-link]');\n\n          if (input === null || input === void 0 ? void 0 : input.dataset) {\n            input.dataset.link = this.linkPlaceholder;\n          }\n        }\n      });\n\n      if (this.content) {\n        const format = getFormat(this.format, this.service.config.format);\n\n        if (format === 'text') {\n          this.quillEditor.setText(this.content, 'silent');\n        } else {\n          const newValue = this.valueSetter(this.quillEditor, this.content);\n          this.quillEditor.setContents(newValue, 'silent');\n        }\n\n        this.quillEditor.getModule('history').clear();\n      } // initialize disabled status based on this.disabled as default value\n\n\n      this.setDisabledState();\n      this.addQuillEventListeners(); // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n\n      if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n        return;\n      } // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n\n\n      requestAnimationFrame(() => {\n        if (this.onValidatorChanged) {\n          this.onValidatorChanged();\n        }\n\n        this.onEditorCreated.emit(this.quillEditor);\n      });\n    });\n  }\n\n  ngOnDestroy() {\n    this.dispose();\n  }\n\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n    /* eslint-disable @typescript-eslint/dot-notation */\n\n\n    if (changes.readOnly) {\n      this.quillEditor.enable(!changes.readOnly.currentValue);\n    }\n\n    if (changes.placeholder) {\n      this.quillEditor.root.dataset.placeholder = changes.placeholder.currentValue;\n    }\n\n    if (changes.defaultEmptyValue) {\n      this.quillEditor.root.dataset.defaultEmptyValue = changes.defaultEmptyValue.currentValue;\n    }\n\n    if (changes.styles) {\n      const currentStyling = changes.styles.currentValue;\n      const previousStyling = changes.styles.previousValue;\n\n      if (previousStyling) {\n        Object.keys(previousStyling).forEach(key => {\n          this.renderer.removeStyle(this.editorElem, key);\n        });\n      }\n\n      if (currentStyling) {\n        Object.keys(currentStyling).forEach(key => {\n          this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n        });\n      }\n    }\n\n    if (changes.classes) {\n      const currentClasses = changes.classes.currentValue;\n      const previousClasses = changes.classes.previousValue;\n\n      if (previousClasses) {\n        this.removeClasses(previousClasses);\n      }\n\n      if (currentClasses) {\n        this.addClasses(currentClasses);\n      }\n    } // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n    // `debounceTime` operator or vice-versa remove it.\n\n\n    if (changes.debounceTime) {\n      this.addQuillEventListeners();\n    }\n    /* eslint-enable @typescript-eslint/dot-notation */\n\n  }\n\n  addClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.addClass(this.editorElem, c);\n    });\n  }\n\n  removeClasses(classList) {\n    QuillEditorBase.normalizeClassNames(classList).forEach(c => {\n      this.renderer.removeClass(this.editorElem, c);\n    });\n  }\n\n  writeValue(currentValue) {\n    // optional fix for https://github.com/angular/angular/issues/14988\n    if (this.filterNull && currentValue === null) {\n      return;\n    }\n\n    this.content = currentValue;\n\n    if (!this.quillEditor) {\n      return;\n    }\n\n    const format = getFormat(this.format, this.service.config.format);\n    const newValue = this.valueSetter(this.quillEditor, currentValue);\n\n    if (this.compareValues) {\n      const currentEditorValue = this.quillEditor.getContents();\n\n      if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n        return;\n      }\n    }\n\n    if (currentValue) {\n      if (format === 'text') {\n        this.quillEditor.setText(currentValue);\n      } else {\n        this.quillEditor.setContents(newValue);\n      }\n\n      return;\n    }\n\n    this.quillEditor.setText('');\n  }\n\n  setDisabledState(isDisabled = this.disabled) {\n    // store initial value to set appropriate disabled status after ViewInit\n    this.disabled = isDisabled;\n\n    if (this.quillEditor) {\n      if (isDisabled) {\n        this.quillEditor.disable();\n        this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n      } else {\n        if (!this.readOnly) {\n          this.quillEditor.enable();\n        }\n\n        this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n      }\n    }\n  }\n\n  registerOnChange(fn) {\n    this.onModelChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onModelTouched = fn;\n  }\n\n  registerOnValidatorChange(fn) {\n    this.onValidatorChanged = fn;\n  }\n\n  validate() {\n    if (!this.quillEditor) {\n      return null;\n    }\n\n    const err = {};\n    let valid = true;\n    const text = this.quillEditor.getText(); // trim text if wanted + handle special case that an empty editor contains a new line\n\n    const textLength = this.trimOnValidation ? text.trim().length : text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1;\n    const deltaOperations = this.quillEditor.getContents().ops;\n    const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n\n    if (this.minLength && textLength && textLength < this.minLength) {\n      err.minLengthError = {\n        given: textLength,\n        minLength: this.minLength\n      };\n      valid = false;\n    }\n\n    if (this.maxLength && textLength > this.maxLength) {\n      err.maxLengthError = {\n        given: textLength,\n        maxLength: this.maxLength\n      };\n      valid = false;\n    }\n\n    if (this.required && !textLength && onlyEmptyOperation) {\n      err.requiredError = {\n        empty: true\n      };\n      valid = false;\n    }\n\n    return valid ? null : err;\n  }\n\n  addQuillEventListeners() {\n    this.dispose(); // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n    // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n    // `zone.run` when we emit an event to the parent component.\n\n    this.zone.runOutsideAngular(() => {\n      this.subscription = new Subscription();\n      this.subscription.add( // mark model as touched if editor lost focus\n      fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n        this.selectionChangeHandler(range, oldRange, source);\n      })); // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n      // will be invoked upon subscription and teardown.\n\n      let textChange$ = fromEvent(this.quillEditor, 'text-change');\n      let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n\n      if (typeof this.debounceTime === 'number') {\n        textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n        editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n      }\n\n      this.subscription.add( // update model if text changes\n      textChange$.subscribe(([delta, oldDelta, source]) => {\n        this.textChangeHandler(delta, oldDelta, source);\n      }));\n      this.subscription.add( // triggered if selection or text changed\n      editorChange$.subscribe(([event, current, old, source]) => {\n        this.editorChangeHandler(event, current, old, source);\n      }));\n    });\n  }\n\n  dispose() {\n    if (this.subscription !== null) {\n      this.subscription.unsubscribe();\n      this.subscription = null;\n    }\n  }\n\n}\n\nQuillEditorBase.ɵfac = function QuillEditorBase_Factory(t) {\n  return new (t || QuillEditorBase)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\n\nQuillEditorBase.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: QuillEditorBase,\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    readOnly: \"readOnly\",\n    placeholder: \"placeholder\",\n    maxLength: \"maxLength\",\n    minLength: \"minLength\",\n    required: \"required\",\n    formats: \"formats\",\n    customToolbarPosition: \"customToolbarPosition\",\n    sanitize: \"sanitize\",\n    styles: \"styles\",\n    strict: \"strict\",\n    scrollingContainer: \"scrollingContainer\",\n    bounds: \"bounds\",\n    customOptions: \"customOptions\",\n    customModules: \"customModules\",\n    trackChanges: \"trackChanges\",\n    preserveWhitespace: \"preserveWhitespace\",\n    classes: \"classes\",\n    trimOnValidation: \"trimOnValidation\",\n    linkPlaceholder: \"linkPlaceholder\",\n    compareValues: \"compareValues\",\n    filterNull: \"filterNull\",\n    debounceTime: \"debounceTime\",\n    defaultEmptyValue: \"defaultEmptyValue\",\n    valueGetter: \"valueGetter\",\n    valueSetter: \"valueSetter\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\",\n    onEditorChanged: \"onEditorChanged\",\n    onContentChanged: \"onContentChanged\",\n    onSelectionChanged: \"onSelectionChanged\",\n    onFocus: \"onFocus\",\n    onBlur: \"onBlur\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorBase, [{\n    type: Directive\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }, {\n      type: i0.ChangeDetectorRef\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    readOnly: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    minLength: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    customToolbarPosition: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    styles: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    scrollingContainer: [{\n      type: Input\n    }],\n    bounds: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    trackChanges: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    classes: [{\n      type: Input\n    }],\n    trimOnValidation: [{\n      type: Input\n    }],\n    linkPlaceholder: [{\n      type: Input\n    }],\n    compareValues: [{\n      type: Input\n    }],\n    filterNull: [{\n      type: Input\n    }],\n    debounceTime: [{\n      type: Input\n    }],\n    defaultEmptyValue: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }],\n    onEditorChanged: [{\n      type: Output\n    }],\n    onContentChanged: [{\n      type: Output\n    }],\n    onSelectionChanged: [{\n      type: Output\n    }],\n    onFocus: [{\n      type: Output\n    }],\n    onBlur: [{\n      type: Output\n    }],\n    valueGetter: [{\n      type: Input\n    }],\n    valueSetter: [{\n      type: Input\n    }]\n  });\n})();\n\nclass QuillEditorComponent extends QuillEditorBase {\n  constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n    super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n  }\n\n}\n\nQuillEditorComponent.ɵfac = function QuillEditorComponent_Factory(t) {\n  return new (t || QuillEditorComponent)(i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(ElementRef), i0.ɵɵdirectiveInject(ChangeDetectorRef), i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(Renderer2), i0.ɵɵdirectiveInject(NgZone), i0.ɵɵdirectiveInject(QuillService));\n};\n\nQuillEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillEditorComponent,\n  selectors: [[\"quill-editor\"]],\n  features: [i0.ɵɵProvidersFeature([{\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }, {\n    multi: true,\n    provide: NG_VALIDATORS,\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    useExisting: forwardRef(() => QuillEditorComponent)\n  }]), i0.ɵɵInheritDefinitionFeature],\n  ngContentSelectors: _c1,\n  decls: 1,\n  vars: 0,\n  template: function QuillEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef(_c0);\n      i0.ɵɵprojection(0);\n    }\n  },\n  styles: [\":host{display:inline-block}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillEditorComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      providers: [{\n        multi: true,\n        provide: NG_VALUE_ACCESSOR,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }, {\n        multi: true,\n        provide: NG_VALIDATORS,\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        useExisting: forwardRef(() => QuillEditorComponent)\n      }],\n      selector: 'quill-editor',\n      template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`,\n      styles: [`\n    :host {\n      display: inline-block;\n    }\n    `]\n    }]\n  }], function () {\n    return [{\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef,\n      decorators: [{\n        type: Inject,\n        args: [ElementRef]\n      }]\n    }, {\n      type: i0.ChangeDetectorRef,\n      decorators: [{\n        type: Inject,\n        args: [ChangeDetectorRef]\n      }]\n    }, {\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }, {\n      type: i0.Renderer2,\n      decorators: [{\n        type: Inject,\n        args: [Renderer2]\n      }]\n    }, {\n      type: i0.NgZone,\n      decorators: [{\n        type: Inject,\n        args: [NgZone]\n      }]\n    }, {\n      type: QuillService,\n      decorators: [{\n        type: Inject,\n        args: [QuillService]\n      }]\n    }];\n  }, null);\n})();\n\nclass QuillViewHTMLComponent {\n  constructor(sanitizer, service) {\n    this.sanitizer = sanitizer;\n    this.service = service;\n    this.content = '';\n    this.sanitize = false;\n    this.innerHTML = '';\n    this.themeClass = 'ql-snow';\n  }\n\n  ngOnChanges(changes) {\n    if (changes.theme) {\n      const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    } else if (!this.theme) {\n      const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n      this.themeClass = `ql-${theme} ngx-quill-view-html`;\n    }\n\n    if (changes.content) {\n      const content = changes.content.currentValue;\n      this.innerHTML = this.sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n    }\n  }\n\n}\n\nQuillViewHTMLComponent.ɵfac = function QuillViewHTMLComponent_Factory(t) {\n  return new (t || QuillViewHTMLComponent)(i0.ɵɵdirectiveInject(DomSanitizer), i0.ɵɵdirectiveInject(QuillService));\n};\n\nQuillViewHTMLComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewHTMLComponent,\n  selectors: [[\"quill-view-html\"]],\n  inputs: {\n    content: \"content\",\n    theme: \"theme\",\n    sanitize: \"sanitize\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 2,\n  vars: 2,\n  consts: [[1, \"ql-container\", 3, \"ngClass\"], [1, \"ql-editor\", 3, \"innerHTML\"]],\n  template: function QuillViewHTMLComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵelement(1, \"div\", 1);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.themeClass);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"innerHTML\", ctx.innerHTML, i0.ɵɵsanitizeHtml);\n    }\n  },\n  directives: [i2.NgClass],\n  styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewHTMLComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view-html',\n      styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n      template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer,\n      decorators: [{\n        type: Inject,\n        args: [DomSanitizer]\n      }]\n    }, {\n      type: QuillService\n    }];\n  }, {\n    content: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }]\n  });\n})();\n\nclass QuillViewComponent {\n  constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n    this.elementRef = elementRef;\n    this.renderer = renderer;\n    this.zone = zone;\n    this.service = service;\n    this.domSanitizer = domSanitizer;\n    this.platformId = platformId;\n    this.sanitize = false;\n    this.strict = true;\n    this.customModules = [];\n    this.customOptions = [];\n    this.preserveWhitespace = false;\n    this.onEditorCreated = new EventEmitter();\n\n    this.valueSetter = (quillEditor, value) => {\n      const format = getFormat(this.format, this.service.config.format);\n      let content = value;\n\n      if (format === 'text') {\n        quillEditor.setText(content);\n      } else {\n        if (format === 'html') {\n          if (this.sanitize) {\n            value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n          }\n\n          content = quillEditor.clipboard.convert(value);\n        } else if (format === 'json') {\n          try {\n            content = JSON.parse(value);\n          } catch (e) {\n            content = [{\n              insert: value\n            }];\n          }\n        }\n\n        quillEditor.setContents(content);\n      }\n    };\n  }\n\n  ngOnChanges(changes) {\n    if (!this.quillEditor) {\n      return;\n    }\n\n    if (changes.content) {\n      this.valueSetter(this.quillEditor, changes.content.currentValue);\n    }\n  }\n\n  ngAfterViewInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      if (isPlatformServer(this.platformId)) {\n        return;\n      } // eslint-disable-next-line @typescript-eslint/naming-convention\n\n\n      const Quill = yield this.service.getQuill();\n      const modules = Object.assign({}, this.modules || this.service.config.modules);\n      modules.toolbar = false;\n      this.customOptions.forEach(customOption => {\n        const newCustomOption = Quill.import(customOption.import);\n        newCustomOption.whitelist = customOption.whitelist;\n        Quill.register(newCustomOption, true);\n      });\n      this.customModules.forEach(({\n        implementation,\n        path\n      }) => {\n        Quill.register(path, implementation);\n      });\n      let debug = this.debug;\n\n      if (!debug && debug !== false && this.service.config.debug) {\n        debug = this.service.config.debug;\n      }\n\n      let formats = this.formats;\n\n      if (!formats && formats === undefined) {\n        formats = this.service.config.formats ? Object.assign({}, this.service.config.formats) : this.service.config.formats === null ? null : undefined;\n      }\n\n      const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n      this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n      this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n      this.zone.runOutsideAngular(() => {\n        this.quillEditor = new Quill(this.editorElem, {\n          debug: debug,\n          formats: formats,\n          modules,\n          readOnly: true,\n          strict: this.strict,\n          theme\n        });\n      });\n      this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n\n      if (this.content) {\n        this.valueSetter(this.quillEditor, this.content);\n      } // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n      // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n\n\n      if (!this.onEditorCreated.observers.length) {\n        return;\n      } // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n      // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n      // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n\n\n      requestAnimationFrame(() => {\n        this.onEditorCreated.emit(this.quillEditor);\n      });\n    });\n  }\n\n}\n\nQuillViewComponent.ɵfac = function QuillViewComponent_Factory(t) {\n  return new (t || QuillViewComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(QuillService), i0.ɵɵdirectiveInject(i1.DomSanitizer), i0.ɵɵdirectiveInject(PLATFORM_ID));\n};\n\nQuillViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: QuillViewComponent,\n  selectors: [[\"quill-view\"]],\n  inputs: {\n    format: \"format\",\n    theme: \"theme\",\n    modules: \"modules\",\n    debug: \"debug\",\n    formats: \"formats\",\n    sanitize: \"sanitize\",\n    strict: \"strict\",\n    content: \"content\",\n    customModules: \"customModules\",\n    customOptions: \"customOptions\",\n    preserveWhitespace: \"preserveWhitespace\"\n  },\n  outputs: {\n    onEditorCreated: \"onEditorCreated\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 0,\n  vars: 0,\n  template: function QuillViewComponent_Template(rf, ctx) {},\n  styles: [\".ql-container.ngx-quill-view{border:0}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillViewComponent, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      selector: 'quill-view',\n      styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n      template: `\n`\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: i0.Renderer2\n    }, {\n      type: i0.NgZone\n    }, {\n      type: QuillService\n    }, {\n      type: i1.DomSanitizer\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [PLATFORM_ID]\n      }]\n    }];\n  }, {\n    format: [{\n      type: Input\n    }],\n    theme: [{\n      type: Input\n    }],\n    modules: [{\n      type: Input\n    }],\n    debug: [{\n      type: Input\n    }],\n    formats: [{\n      type: Input\n    }],\n    sanitize: [{\n      type: Input\n    }],\n    strict: [{\n      type: Input\n    }],\n    content: [{\n      type: Input\n    }],\n    customModules: [{\n      type: Input\n    }],\n    customOptions: [{\n      type: Input\n    }],\n    preserveWhitespace: [{\n      type: Input\n    }],\n    onEditorCreated: [{\n      type: Output\n    }]\n  });\n})();\n\nclass QuillModule {\n  static forRoot(config) {\n    return {\n      ngModule: QuillModule,\n      providers: [{\n        provide: QUILL_CONFIG_TOKEN,\n        useValue: config\n      }]\n    };\n  }\n\n}\n\nQuillModule.ɵfac = function QuillModule_Factory(t) {\n  return new (t || QuillModule)();\n};\n\nQuillModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: QuillModule\n});\nQuillModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(QuillModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n      imports: [CommonModule]\n    }]\n  }], null, null);\n})();\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };","map":{"version":3,"sources":["D:/Site/A-Blog/client/node_modules/ngx-quill/fesm2015/ngx-quill.mjs"],"names":["i2","DOCUMENT","isPlatformServer","CommonModule","i0","InjectionToken","Injectable","Optional","Inject","EventEmitter","SecurityContext","PLATFORM_ID","Directive","Input","Output","ElementRef","ChangeDetectorRef","Renderer2","NgZone","forwardRef","Component","ViewEncapsulation","NgModule","__awaiter","i1","DomSanitizer","Subscription","fromEvent","debounceTime","NG_VALUE_ACCESSOR","NG_VALIDATORS","defaultModules","toolbar","header","list","script","indent","direction","size","color","background","font","align","getFormat","format","configFormat","passedFormat","QUILL_CONFIG_TOKEN","providedIn","factory","modules","QuillService","constructor","injector","config","count","document","get","getQuill","Quill","$importPromise","Promise","resolve","_a","_b","maybePatchedAddEventListener","addEventListener","quillImport","default","customOptions","forEach","customOption","newCustomOption","import","whitelist","register","suppressGlobalRegisterWarning","customModules","implementation","path","ɵfac","Injector","ɵprov","type","args","undefined","decorators","QuillEditorBase","elementRef","cd","domSanitizer","platformId","renderer","zone","service","required","customToolbarPosition","sanitize","styles","strict","preserveWhitespace","trimOnValidation","compareValues","filterNull","defaultEmptyValue","onEditorCreated","onEditorChanged","onContentChanged","onSelectionChanged","onFocus","onBlur","disabled","subscription","valueGetter","quillEditor","editorElement","html","querySelector","innerHTML","modelValue","getText","getContents","JSON","stringify","e","valueSetter","value","HTML","clipboard","convert","parse","insert","selectionChangeHandler","range","oldRange","source","shouldTriggerOnModelTouched","onModelTouched","observers","length","run","emit","editor","markForCheck","textChangeHandler","delta","oldDelta","text","content","editorElem","trackChanges","shouldTriggerOnModelChange","onModelChange","editorChangeHandler","event","current","old","normalizeClassNames","classes","classList","trim","split","reduce","prev","cur","trimmed","push","ngAfterViewInit","nativeElement","insertAdjacentHTML","toolbarElem","Object","assign","placeholder","keys","key","setStyle","addClasses","bounds","body","debug","readOnly","hasOwnProperty","scrollingContainer","formats","runOutsideAngular","_c","theme","linkPlaceholder","tooltip","input","root","dataset","link","setText","newValue","setContents","getModule","clear","setDisabledState","addQuillEventListeners","onValidatorChanged","requestAnimationFrame","ngOnDestroy","dispose","ngOnChanges","changes","enable","currentValue","currentStyling","previousStyling","previousValue","removeStyle","currentClasses","previousClasses","removeClasses","c","addClass","removeClass","writeValue","currentEditorValue","isDisabled","disable","setAttribute","removeAttribute","registerOnChange","fn","registerOnTouched","registerOnValidatorChange","validate","err","valid","textLength","deltaOperations","ops","onlyEmptyOperation","includes","minLength","minLengthError","given","maxLength","maxLengthError","requiredError","empty","add","subscribe","textChange$","editorChange$","pipe","unsubscribe","ɵdir","QuillEditorComponent","ɵcmp","multi","provide","useExisting","encapsulation","None","providers","selector","template","QuillViewHTMLComponent","sanitizer","themeClass","bypassSecurityTrustHtml","NgClass","QuillViewComponent","QuillModule","forRoot","ngModule","useValue","ɵmod","ɵinj","declarations","exports","imports"],"mappings":"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","sourcesContent":["import * as i2 from '@angular/common';\nimport { DOCUMENT, isPlatformServer, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Injectable, Optional, Inject, EventEmitter, SecurityContext, PLATFORM_ID, Directive, Input, Output, ElementRef, ChangeDetectorRef, Renderer2, NgZone, forwardRef, Component, ViewEncapsulation, NgModule } from '@angular/core';\nimport { __awaiter } from 'tslib';\nimport * as i1 from '@angular/platform-browser';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Subscription, fromEvent } from 'rxjs';\nimport { debounceTime } from 'rxjs/operators';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\n\nconst defaultModules = {\n    toolbar: [\n        ['bold', 'italic', 'underline', 'strike'],\n        ['blockquote', 'code-block'],\n        [{ header: 1 }, { header: 2 }],\n        [{ list: 'ordered' }, { list: 'bullet' }],\n        [{ script: 'sub' }, { script: 'super' }],\n        [{ indent: '-1' }, { indent: '+1' }],\n        [{ direction: 'rtl' }],\n        [{ size: ['small', false, 'large', 'huge'] }],\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\n        [\n            { color: [] },\n            { background: [] }\n        ],\n        [{ font: [] }],\n        [{ align: [] }],\n        ['clean'],\n        ['link', 'image', 'video'] // link and image, video\n    ]\n};\n\nconst getFormat = (format, configFormat) => {\n    const passedFormat = format || configFormat;\n    return passedFormat || 'html';\n};\n\nconst QUILL_CONFIG_TOKEN = new InjectionToken('config', {\n    providedIn: 'root',\n    factory: () => ({ modules: defaultModules })\n});\n\nclass QuillService {\n    constructor(injector, config) {\n        this.config = config;\n        this.count = 0;\n        this.document = injector.get(DOCUMENT);\n        if (!this.config) {\n            this.config = { modules: defaultModules };\n        }\n    }\n    getQuill() {\n        this.count++;\n        if (!this.Quill && this.count === 1) {\n            this.$importPromise = new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                var _a, _b;\n                // Quill adds events listeners on import https://github.com/quilljs/quill/blob/develop/core/emitter.js#L8\n                // We'd want to use the unpatched `addEventListener` method to have all event callbacks to be run outside of zone.\n                // We don't know yet if the `zone.js` is used or not, just save the value to restore it back further.\n                const maybePatchedAddEventListener = this.document.addEventListener;\n                // There're 2 types of Angular applications:\n                // 1) zone-full (by default)\n                // 2) zone-less\n                // The developer can avoid importing the `zone.js` package and tells Angular that he/she is responsible for running\n                // the change detection by himself. This is done by \"nooping\" the zone through `CompilerOptions` when bootstrapping\n                // the root module. We fallback to `document.addEventListener` if `__zone_symbol__addEventListener` is not defined,\n                // this means the `zone.js` is not imported.\n                // The `__zone_symbol__addEventListener` is basically a native DOM API, which is not patched by zone.js, thus not even going\n                // through the `zone.js` task lifecycle. You can also access the native DOM API as follows `target[Zone.__symbol__('methodName')]`.\n                // eslint-disable-next-line @typescript-eslint/dot-notation\n                this.document.addEventListener = this.document['__zone_symbol__addEventListener'] || this.document.addEventListener;\n                const quillImport = yield import('quill');\n                this.document.addEventListener = maybePatchedAddEventListener;\n                this.Quill = (quillImport.default ? quillImport.default : quillImport);\n                // Only register custom options and modules once\n                (_a = this.config.customOptions) === null || _a === void 0 ? void 0 : _a.forEach((customOption) => {\n                    const newCustomOption = this.Quill.import(customOption.import);\n                    newCustomOption.whitelist = customOption.whitelist;\n                    this.Quill.register(newCustomOption, true, this.config.suppressGlobalRegisterWarning);\n                });\n                (_b = this.config.customModules) === null || _b === void 0 ? void 0 : _b.forEach(({ implementation, path }) => {\n                    this.Quill.register(path, implementation, this.config.suppressGlobalRegisterWarning);\n                });\n                resolve(this.Quill);\n            }));\n        }\n        return this.$importPromise;\n    }\n}\nQuillService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillService, deps: [{ token: i0.Injector }, { token: QUILL_CONFIG_TOKEN, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nQuillService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [QUILL_CONFIG_TOKEN]\n                    }] }];\n    } });\n\n// eslint-disable-next-line @angular-eslint/directive-class-suffix\nclass QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        this.elementRef = elementRef;\n        this.cd = cd;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.required = false;\n        this.customToolbarPosition = 'top';\n        this.sanitize = false;\n        this.styles = null;\n        this.strict = true;\n        this.customOptions = [];\n        this.customModules = [];\n        this.preserveWhitespace = false;\n        this.trimOnValidation = false;\n        this.compareValues = false;\n        this.filterNull = false;\n        /*\n        https://github.com/KillerCodeMonkey/ngx-quill/issues/1257 - fix null value set\n      \n        provide default empty value\n        by default null\n      \n        e.g. defaultEmptyValue=\"\" - empty string\n      \n        <quill-editor\n          defaultEmptyValue=\"\"\n          formControlName=\"message\"\n        ></quill-editor>\n        */\n        this.defaultEmptyValue = null;\n        this.onEditorCreated = new EventEmitter();\n        this.onEditorChanged = new EventEmitter();\n        this.onContentChanged = new EventEmitter();\n        this.onSelectionChanged = new EventEmitter();\n        this.onFocus = new EventEmitter();\n        this.onBlur = new EventEmitter();\n        this.disabled = false; // used to store initial value before ViewInit\n        this.subscription = null;\n        this.valueGetter = (quillEditor, editorElement) => {\n            let html = editorElement.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            let modelValue = html;\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'text') {\n                modelValue = quillEditor.getText();\n            }\n            else if (format === 'object') {\n                modelValue = quillEditor.getContents();\n            }\n            else if (format === 'json') {\n                try {\n                    modelValue = JSON.stringify(quillEditor.getContents());\n                }\n                catch (e) {\n                    modelValue = quillEditor.getText();\n                }\n            }\n            return modelValue;\n        };\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            if (format === 'html') {\n                if (this.sanitize) {\n                    value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                }\n                return quillEditor.clipboard.convert(value);\n            }\n            else if (format === 'json') {\n                try {\n                    return JSON.parse(value);\n                }\n                catch (e) {\n                    return [{ insert: value }];\n                }\n            }\n            return value;\n        };\n        this.selectionChangeHandler = (range, oldRange, source) => {\n            const shouldTriggerOnModelTouched = !range && !!this.onModelTouched;\n            // only emit changes when there's any listener\n            if (!this.onBlur.observers.length &&\n                !this.onFocus.observers.length &&\n                !this.onSelectionChanged.observers.length &&\n                !shouldTriggerOnModelTouched) {\n                return;\n            }\n            this.zone.run(() => {\n                if (range === null) {\n                    this.onBlur.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                else if (oldRange === null) {\n                    this.onFocus.emit({\n                        editor: this.quillEditor,\n                        source\n                    });\n                }\n                this.onSelectionChanged.emit({\n                    editor: this.quillEditor,\n                    oldRange,\n                    range,\n                    source\n                });\n                if (shouldTriggerOnModelTouched) {\n                    this.onModelTouched();\n                }\n                this.cd.markForCheck();\n            });\n        };\n        this.textChangeHandler = (delta, oldDelta, source) => {\n            // only emit changes emitted by user interactions\n            const text = this.quillEditor.getText();\n            const content = this.quillEditor.getContents();\n            let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n            if (html === '<p><br></p>' || html === '<div><br></div>') {\n                html = this.defaultEmptyValue;\n            }\n            const trackChanges = this.trackChanges || this.service.config.trackChanges;\n            const shouldTriggerOnModelChange = (source === 'user' || trackChanges && trackChanges === 'all') && !!this.onModelChange;\n            // only emit changes when there's any listener\n            if (!this.onContentChanged.observers.length && !shouldTriggerOnModelChange) {\n                return;\n            }\n            this.zone.run(() => {\n                if (shouldTriggerOnModelChange) {\n                    this.onModelChange(this.valueGetter(this.quillEditor, this.editorElem));\n                }\n                this.onContentChanged.emit({\n                    content,\n                    delta,\n                    editor: this.quillEditor,\n                    html,\n                    oldDelta,\n                    source,\n                    text\n                });\n                this.cd.markForCheck();\n            });\n        };\n        // eslint-disable-next-line max-len\n        this.editorChangeHandler = (event, current, old, source) => {\n            // only emit changes when there's any listener\n            if (!this.onEditorChanged.observers.length) {\n                return;\n            }\n            // only emit changes emitted by user interactions\n            if (event === 'text-change') {\n                const text = this.quillEditor.getText();\n                const content = this.quillEditor.getContents();\n                let html = this.editorElem.querySelector('.ql-editor').innerHTML;\n                if (html === '<p><br></p>' || html === '<div><br></div>') {\n                    html = this.defaultEmptyValue;\n                }\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        content,\n                        delta: current,\n                        editor: this.quillEditor,\n                        event,\n                        html,\n                        oldDelta: old,\n                        source,\n                        text\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n            else {\n                this.zone.run(() => {\n                    this.onEditorChanged.emit({\n                        editor: this.quillEditor,\n                        event,\n                        oldRange: old,\n                        range: current,\n                        source\n                    });\n                    this.cd.markForCheck();\n                });\n            }\n        };\n        this.document = injector.get(DOCUMENT);\n    }\n    static normalizeClassNames(classes) {\n        const classList = classes.trim().split(' ');\n        return classList.reduce((prev, cur) => {\n            const trimmed = cur.trim();\n            if (trimmed) {\n                prev.push(trimmed);\n            }\n            return prev;\n        }, []);\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            this.elementRef.nativeElement.insertAdjacentHTML(this.customToolbarPosition === 'top' ? 'beforeend' : 'afterbegin', this.preserveWhitespace ? '<pre quill-editor-element></pre>' : '<div quill-editor-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-editor-element]');\n            const toolbarElem = this.elementRef.nativeElement.querySelector('[quill-editor-toolbar]');\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            if (toolbarElem) {\n                modules.toolbar = toolbarElem;\n            }\n            else if (modules.toolbar === undefined) {\n                modules.toolbar = defaultModules.toolbar;\n            }\n            let placeholder = this.placeholder !== undefined ? this.placeholder : this.service.config.placeholder;\n            if (placeholder === undefined) {\n                placeholder = 'Insert text here ...';\n            }\n            if (this.styles) {\n                Object.keys(this.styles).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n            if (this.classes) {\n                this.addClasses(this.classes);\n            }\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let bounds = this.bounds && this.bounds === 'self' ? this.editorElem : this.bounds;\n            if (!bounds) {\n                bounds = this.service.config.bounds ? this.service.config.bounds : this.document.body;\n            }\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let readOnly = this.readOnly;\n            if (!readOnly && this.readOnly !== false) {\n                readOnly = this.service.config.readOnly !== undefined ? this.service.config.readOnly : false;\n            }\n            let defaultEmptyValue = this.defaultEmptyValue;\n            if (this.service.config.hasOwnProperty('defaultEmptyValue')) {\n                defaultEmptyValue = this.service.config.defaultEmptyValue;\n            }\n            let scrollingContainer = this.scrollingContainer;\n            if (!scrollingContainer && this.scrollingContainer !== null) {\n                scrollingContainer =\n                    this.service.config.scrollingContainer === null\n                        || this.service.config.scrollingContainer ? this.service.config.scrollingContainer : null;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ? [...this.service.config.formats] : (this.service.config.formats === null ? null : undefined);\n            }\n            this.zone.runOutsideAngular(() => {\n                var _a, _b, _c;\n                this.quillEditor = new Quill(this.editorElem, {\n                    bounds,\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    placeholder,\n                    readOnly,\n                    defaultEmptyValue,\n                    scrollingContainer: scrollingContainer,\n                    strict: this.strict,\n                    theme: this.theme || (this.service.config.theme ? this.service.config.theme : 'snow')\n                });\n                // Set optional link placeholder, Quill has no native API for it so using workaround\n                if (this.linkPlaceholder) {\n                    const tooltip = (_b = (_a = this.quillEditor) === null || _a === void 0 ? void 0 : _a.theme) === null || _b === void 0 ? void 0 : _b.tooltip;\n                    const input = (_c = tooltip === null || tooltip === void 0 ? void 0 : tooltip.root) === null || _c === void 0 ? void 0 : _c.querySelector('input[data-link]');\n                    if (input === null || input === void 0 ? void 0 : input.dataset) {\n                        input.dataset.link = this.linkPlaceholder;\n                    }\n                }\n            });\n            if (this.content) {\n                const format = getFormat(this.format, this.service.config.format);\n                if (format === 'text') {\n                    this.quillEditor.setText(this.content, 'silent');\n                }\n                else {\n                    const newValue = this.valueSetter(this.quillEditor, this.content);\n                    this.quillEditor.setContents(newValue, 'silent');\n                }\n                this.quillEditor.getModule('history').clear();\n            }\n            // initialize disabled status based on this.disabled as default value\n            this.setDisabledState();\n            this.addQuillEventListeners();\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length && !this.onValidatorChanged) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                if (this.onValidatorChanged) {\n                    this.onValidatorChanged();\n                }\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n    ngOnDestroy() {\n        this.dispose();\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        /* eslint-disable @typescript-eslint/dot-notation */\n        if (changes.readOnly) {\n            this.quillEditor.enable(!changes.readOnly.currentValue);\n        }\n        if (changes.placeholder) {\n            this.quillEditor.root.dataset.placeholder =\n                changes.placeholder.currentValue;\n        }\n        if (changes.defaultEmptyValue) {\n            this.quillEditor.root.dataset.defaultEmptyValue =\n                changes.defaultEmptyValue.currentValue;\n        }\n        if (changes.styles) {\n            const currentStyling = changes.styles.currentValue;\n            const previousStyling = changes.styles.previousValue;\n            if (previousStyling) {\n                Object.keys(previousStyling).forEach((key) => {\n                    this.renderer.removeStyle(this.editorElem, key);\n                });\n            }\n            if (currentStyling) {\n                Object.keys(currentStyling).forEach((key) => {\n                    this.renderer.setStyle(this.editorElem, key, this.styles[key]);\n                });\n            }\n        }\n        if (changes.classes) {\n            const currentClasses = changes.classes.currentValue;\n            const previousClasses = changes.classes.previousValue;\n            if (previousClasses) {\n                this.removeClasses(previousClasses);\n            }\n            if (currentClasses) {\n                this.addClasses(currentClasses);\n            }\n        }\n        // We'd want to re-apply event listeners if the `debounceTime` binding changes to apply the\n        // `debounceTime` operator or vice-versa remove it.\n        if (changes.debounceTime) {\n            this.addQuillEventListeners();\n        }\n        /* eslint-enable @typescript-eslint/dot-notation */\n    }\n    addClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.addClass(this.editorElem, c);\n        });\n    }\n    removeClasses(classList) {\n        QuillEditorBase.normalizeClassNames(classList).forEach((c) => {\n            this.renderer.removeClass(this.editorElem, c);\n        });\n    }\n    writeValue(currentValue) {\n        // optional fix for https://github.com/angular/angular/issues/14988\n        if (this.filterNull && currentValue === null) {\n            return;\n        }\n        this.content = currentValue;\n        if (!this.quillEditor) {\n            return;\n        }\n        const format = getFormat(this.format, this.service.config.format);\n        const newValue = this.valueSetter(this.quillEditor, currentValue);\n        if (this.compareValues) {\n            const currentEditorValue = this.quillEditor.getContents();\n            if (JSON.stringify(currentEditorValue) === JSON.stringify(newValue)) {\n                return;\n            }\n        }\n        if (currentValue) {\n            if (format === 'text') {\n                this.quillEditor.setText(currentValue);\n            }\n            else {\n                this.quillEditor.setContents(newValue);\n            }\n            return;\n        }\n        this.quillEditor.setText('');\n    }\n    setDisabledState(isDisabled = this.disabled) {\n        // store initial value to set appropriate disabled status after ViewInit\n        this.disabled = isDisabled;\n        if (this.quillEditor) {\n            if (isDisabled) {\n                this.quillEditor.disable();\n                this.renderer.setAttribute(this.elementRef.nativeElement, 'disabled', 'disabled');\n            }\n            else {\n                if (!this.readOnly) {\n                    this.quillEditor.enable();\n                }\n                this.renderer.removeAttribute(this.elementRef.nativeElement, 'disabled');\n            }\n        }\n    }\n    registerOnChange(fn) {\n        this.onModelChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onModelTouched = fn;\n    }\n    registerOnValidatorChange(fn) {\n        this.onValidatorChanged = fn;\n    }\n    validate() {\n        if (!this.quillEditor) {\n            return null;\n        }\n        const err = {};\n        let valid = true;\n        const text = this.quillEditor.getText();\n        // trim text if wanted + handle special case that an empty editor contains a new line\n        const textLength = this.trimOnValidation ? text.trim().length : (text.length === 1 && text.trim().length === 0 ? 0 : text.length - 1);\n        const deltaOperations = this.quillEditor.getContents().ops;\n        const onlyEmptyOperation = deltaOperations && deltaOperations.length === 1 && ['\\n', ''].includes(deltaOperations[0].insert);\n        if (this.minLength && textLength && textLength < this.minLength) {\n            err.minLengthError = {\n                given: textLength,\n                minLength: this.minLength\n            };\n            valid = false;\n        }\n        if (this.maxLength && textLength > this.maxLength) {\n            err.maxLengthError = {\n                given: textLength,\n                maxLength: this.maxLength\n            };\n            valid = false;\n        }\n        if (this.required && !textLength && onlyEmptyOperation) {\n            err.requiredError = {\n                empty: true\n            };\n            valid = false;\n        }\n        return valid ? null : err;\n    }\n    addQuillEventListeners() {\n        this.dispose();\n        // We have to enter the `<root>` zone when adding event listeners, so `debounceTime` will spawn the\n        // `AsyncAction` there w/o triggering change detections. We still re-enter the Angular's zone through\n        // `zone.run` when we emit an event to the parent component.\n        this.zone.runOutsideAngular(() => {\n            this.subscription = new Subscription();\n            this.subscription.add(\n            // mark model as touched if editor lost focus\n            fromEvent(this.quillEditor, 'selection-change').subscribe(([range, oldRange, source]) => {\n                this.selectionChangeHandler(range, oldRange, source);\n            }));\n            // The `fromEvent` supports passing JQuery-style event targets, the editor has `on` and `off` methods which\n            // will be invoked upon subscription and teardown.\n            let textChange$ = fromEvent(this.quillEditor, 'text-change');\n            let editorChange$ = fromEvent(this.quillEditor, 'editor-change');\n            if (typeof this.debounceTime === 'number') {\n                textChange$ = textChange$.pipe(debounceTime(this.debounceTime));\n                editorChange$ = editorChange$.pipe(debounceTime(this.debounceTime));\n            }\n            this.subscription.add(\n            // update model if text changes\n            textChange$.subscribe(([delta, oldDelta, source]) => {\n                this.textChangeHandler(delta, oldDelta, source);\n            }));\n            this.subscription.add(\n            // triggered if selection or text changed\n            editorChange$.subscribe(([event, current, old, source]) => {\n                this.editorChangeHandler(event, current, old, source);\n            }));\n        });\n    }\n    dispose() {\n        if (this.subscription !== null) {\n            this.subscription.unsubscribe();\n            this.subscription = null;\n        }\n    }\n}\nQuillEditorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillEditorBase, deps: [{ token: i0.Injector }, { token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Directive });\nQuillEditorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.0.0\", type: QuillEditorBase, inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", readOnly: \"readOnly\", placeholder: \"placeholder\", maxLength: \"maxLength\", minLength: \"minLength\", required: \"required\", formats: \"formats\", customToolbarPosition: \"customToolbarPosition\", sanitize: \"sanitize\", styles: \"styles\", strict: \"strict\", scrollingContainer: \"scrollingContainer\", bounds: \"bounds\", customOptions: \"customOptions\", customModules: \"customModules\", trackChanges: \"trackChanges\", preserveWhitespace: \"preserveWhitespace\", classes: \"classes\", trimOnValidation: \"trimOnValidation\", linkPlaceholder: \"linkPlaceholder\", compareValues: \"compareValues\", filterNull: \"filterNull\", debounceTime: \"debounceTime\", defaultEmptyValue: \"defaultEmptyValue\", valueGetter: \"valueGetter\", valueSetter: \"valueSetter\" }, outputs: { onEditorCreated: \"onEditorCreated\", onEditorChanged: \"onEditorChanged\", onContentChanged: \"onContentChanged\", onSelectionChanged: \"onSelectionChanged\", onFocus: \"onFocus\", onBlur: \"onBlur\" }, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillEditorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }];\n    }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], readOnly: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], maxLength: [{\n                type: Input\n            }], minLength: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], customToolbarPosition: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], styles: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], scrollingContainer: [{\n                type: Input\n            }], bounds: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], trackChanges: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], classes: [{\n                type: Input\n            }], trimOnValidation: [{\n                type: Input\n            }], linkPlaceholder: [{\n                type: Input\n            }], compareValues: [{\n                type: Input\n            }], filterNull: [{\n                type: Input\n            }], debounceTime: [{\n                type: Input\n            }], defaultEmptyValue: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }], onEditorChanged: [{\n                type: Output\n            }], onContentChanged: [{\n                type: Output\n            }], onSelectionChanged: [{\n                type: Output\n            }], onFocus: [{\n                type: Output\n            }], onBlur: [{\n                type: Output\n            }], valueGetter: [{\n                type: Input\n            }], valueSetter: [{\n                type: Input\n            }] } });\nclass QuillEditorComponent extends QuillEditorBase {\n    constructor(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service) {\n        super(injector, elementRef, cd, domSanitizer, platformId, renderer, zone, service);\n    }\n}\nQuillEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillEditorComponent, deps: [{ token: i0.Injector }, { token: ElementRef }, { token: ChangeDetectorRef }, { token: DomSanitizer }, { token: PLATFORM_ID }, { token: Renderer2 }, { token: NgZone }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: QuillEditorComponent, selector: \"quill-editor\", providers: [\n        {\n            multi: true,\n            provide: NG_VALUE_ACCESSOR,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        },\n        {\n            multi: true,\n            provide: NG_VALIDATORS,\n            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n            useExisting: forwardRef(() => QuillEditorComponent)\n        }\n    ], usesInheritance: true, ngImport: i0, template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`, isInline: true, styles: [\":host{display:inline-block}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillEditorComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    providers: [\n                        {\n                            multi: true,\n                            provide: NG_VALUE_ACCESSOR,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        },\n                        {\n                            multi: true,\n                            provide: NG_VALIDATORS,\n                            // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                            useExisting: forwardRef(() => QuillEditorComponent)\n                        }\n                    ],\n                    selector: 'quill-editor',\n                    template: `\n  <ng-content select=\"[quill-editor-toolbar]\"></ng-content>\n`,\n                    styles: [\n                        `\n    :host {\n      display: inline-block;\n    }\n    `\n                    ]\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.Injector }, { type: i0.ElementRef, decorators: [{\n                        type: Inject,\n                        args: [ElementRef]\n                    }] }, { type: i0.ChangeDetectorRef, decorators: [{\n                        type: Inject,\n                        args: [ChangeDetectorRef]\n                    }] }, { type: i1.DomSanitizer, decorators: [{\n                        type: Inject,\n                        args: [DomSanitizer]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }, { type: i0.Renderer2, decorators: [{\n                        type: Inject,\n                        args: [Renderer2]\n                    }] }, { type: i0.NgZone, decorators: [{\n                        type: Inject,\n                        args: [NgZone]\n                    }] }, { type: QuillService, decorators: [{\n                        type: Inject,\n                        args: [QuillService]\n                    }] }];\n    } });\n\nclass QuillViewHTMLComponent {\n    constructor(sanitizer, service) {\n        this.sanitizer = sanitizer;\n        this.service = service;\n        this.content = '';\n        this.sanitize = false;\n        this.innerHTML = '';\n        this.themeClass = 'ql-snow';\n    }\n    ngOnChanges(changes) {\n        if (changes.theme) {\n            const theme = changes.theme.currentValue || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        else if (!this.theme) {\n            const theme = this.service.config.theme ? this.service.config.theme : 'snow';\n            this.themeClass = `ql-${theme} ngx-quill-view-html`;\n        }\n        if (changes.content) {\n            const content = changes.content.currentValue;\n            this.innerHTML = this.sanitize ? content : this.sanitizer.bypassSecurityTrustHtml(content);\n        }\n    }\n}\nQuillViewHTMLComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillViewHTMLComponent, deps: [{ token: DomSanitizer }, { token: QuillService }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewHTMLComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: QuillViewHTMLComponent, selector: \"quill-view-html\", inputs: { content: \"content\", theme: \"theme\", sanitize: \"sanitize\" }, usesOnChanges: true, ngImport: i0, template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`, isInline: true, styles: [\".ql-container.ngx-quill-view-html{border:0}\\n\"], directives: [{ type: i2.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillViewHTMLComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'quill-view-html',\n                    styles: [`\n.ql-container.ngx-quill-view-html {\n  border: 0;\n}\n`],\n                    template: `\n  <div class=\"ql-container\" [ngClass]=\"themeClass\">\n    <div class=\"ql-editor\" [innerHTML]=\"innerHTML\">\n    </div>\n  </div>\n`\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.DomSanitizer, decorators: [{\n                        type: Inject,\n                        args: [DomSanitizer]\n                    }] }, { type: QuillService }];\n    }, propDecorators: { content: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }] } });\n\nclass QuillViewComponent {\n    constructor(elementRef, renderer, zone, service, domSanitizer, platformId) {\n        this.elementRef = elementRef;\n        this.renderer = renderer;\n        this.zone = zone;\n        this.service = service;\n        this.domSanitizer = domSanitizer;\n        this.platformId = platformId;\n        this.sanitize = false;\n        this.strict = true;\n        this.customModules = [];\n        this.customOptions = [];\n        this.preserveWhitespace = false;\n        this.onEditorCreated = new EventEmitter();\n        this.valueSetter = (quillEditor, value) => {\n            const format = getFormat(this.format, this.service.config.format);\n            let content = value;\n            if (format === 'text') {\n                quillEditor.setText(content);\n            }\n            else {\n                if (format === 'html') {\n                    if (this.sanitize) {\n                        value = this.domSanitizer.sanitize(SecurityContext.HTML, value);\n                    }\n                    content = quillEditor.clipboard.convert(value);\n                }\n                else if (format === 'json') {\n                    try {\n                        content = JSON.parse(value);\n                    }\n                    catch (e) {\n                        content = [{ insert: value }];\n                    }\n                }\n                quillEditor.setContents(content);\n            }\n        };\n    }\n    ngOnChanges(changes) {\n        if (!this.quillEditor) {\n            return;\n        }\n        if (changes.content) {\n            this.valueSetter(this.quillEditor, changes.content.currentValue);\n        }\n    }\n    ngAfterViewInit() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (isPlatformServer(this.platformId)) {\n                return;\n            }\n            // eslint-disable-next-line @typescript-eslint/naming-convention\n            const Quill = yield this.service.getQuill();\n            const modules = Object.assign({}, this.modules || this.service.config.modules);\n            modules.toolbar = false;\n            this.customOptions.forEach((customOption) => {\n                const newCustomOption = Quill.import(customOption.import);\n                newCustomOption.whitelist = customOption.whitelist;\n                Quill.register(newCustomOption, true);\n            });\n            this.customModules.forEach(({ implementation, path }) => {\n                Quill.register(path, implementation);\n            });\n            let debug = this.debug;\n            if (!debug && debug !== false && this.service.config.debug) {\n                debug = this.service.config.debug;\n            }\n            let formats = this.formats;\n            if (!formats && formats === undefined) {\n                formats = this.service.config.formats ?\n                    Object.assign({}, this.service.config.formats) : (this.service.config.formats === null ? null : undefined);\n            }\n            const theme = this.theme || (this.service.config.theme ? this.service.config.theme : 'snow');\n            this.elementRef.nativeElement.insertAdjacentHTML('afterbegin', this.preserveWhitespace ? '<pre quill-view-element></pre>' : '<div quill-view-element></div>');\n            this.editorElem = this.elementRef.nativeElement.querySelector('[quill-view-element]');\n            this.zone.runOutsideAngular(() => {\n                this.quillEditor = new Quill(this.editorElem, {\n                    debug: debug,\n                    formats: formats,\n                    modules,\n                    readOnly: true,\n                    strict: this.strict,\n                    theme\n                });\n            });\n            this.renderer.addClass(this.editorElem, 'ngx-quill-view');\n            if (this.content) {\n                this.valueSetter(this.quillEditor, this.content);\n            }\n            // The `requestAnimationFrame` triggers change detection. There's no sense to invoke the `requestAnimationFrame` if anyone is\n            // listening to the `onEditorCreated` event inside the template, for instance `<quill-view (onEditorCreated)=\"...\">`.\n            if (!this.onEditorCreated.observers.length) {\n                return;\n            }\n            // The `requestAnimationFrame` will trigger change detection and `onEditorCreated` will also call `markDirty()`\n            // internally, since Angular wraps template event listeners into `listener` instruction. We're using the `requestAnimationFrame`\n            // to prevent the frame drop and avoid `ExpressionChangedAfterItHasBeenCheckedError` error.\n            requestAnimationFrame(() => {\n                this.onEditorCreated.emit(this.quillEditor);\n            });\n        });\n    }\n}\nQuillViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillViewComponent, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i0.NgZone }, { token: QuillService }, { token: i1.DomSanitizer }, { token: PLATFORM_ID }], target: i0.ɵɵFactoryTarget.Component });\nQuillViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.0.0\", type: QuillViewComponent, selector: \"quill-view\", inputs: { format: \"format\", theme: \"theme\", modules: \"modules\", debug: \"debug\", formats: \"formats\", sanitize: \"sanitize\", strict: \"strict\", content: \"content\", customModules: \"customModules\", customOptions: \"customOptions\", preserveWhitespace: \"preserveWhitespace\" }, outputs: { onEditorCreated: \"onEditorCreated\" }, usesOnChanges: true, ngImport: i0, template: `\n`, isInline: true, styles: [\".ql-container.ngx-quill-view{border:0}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillViewComponent, decorators: [{\n            type: Component,\n            args: [{\n                    encapsulation: ViewEncapsulation.None,\n                    selector: 'quill-view',\n                    styles: [`\n.ql-container.ngx-quill-view {\n  border: 0;\n}\n`],\n                    template: `\n`\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i0.NgZone }, { type: QuillService }, { type: i1.DomSanitizer }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [PLATFORM_ID]\n                    }] }];\n    }, propDecorators: { format: [{\n                type: Input\n            }], theme: [{\n                type: Input\n            }], modules: [{\n                type: Input\n            }], debug: [{\n                type: Input\n            }], formats: [{\n                type: Input\n            }], sanitize: [{\n                type: Input\n            }], strict: [{\n                type: Input\n            }], content: [{\n                type: Input\n            }], customModules: [{\n                type: Input\n            }], customOptions: [{\n                type: Input\n            }], preserveWhitespace: [{\n                type: Input\n            }], onEditorCreated: [{\n                type: Output\n            }] } });\n\nclass QuillModule {\n    static forRoot(config) {\n        return {\n            ngModule: QuillModule,\n            providers: [\n                {\n                    provide: QUILL_CONFIG_TOKEN,\n                    useValue: config\n                }\n            ]\n        };\n    }\n}\nQuillModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nQuillModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillModule, declarations: [QuillEditorComponent,\n        QuillViewComponent,\n        QuillViewHTMLComponent], imports: [CommonModule], exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent] });\nQuillModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillModule, imports: [[CommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.0.0\", ngImport: i0, type: QuillModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        QuillEditorComponent,\n                        QuillViewComponent,\n                        QuillViewHTMLComponent\n                    ],\n                    exports: [QuillEditorComponent, QuillViewComponent, QuillViewHTMLComponent],\n                    imports: [CommonModule],\n                }]\n        }] });\n\n/*\n * Public API Surface of ngx-quill\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { QUILL_CONFIG_TOKEN, QuillEditorBase, QuillEditorComponent, QuillModule, QuillService, QuillViewComponent, QuillViewHTMLComponent, defaultModules };\n"]},"metadata":{},"sourceType":"module"}
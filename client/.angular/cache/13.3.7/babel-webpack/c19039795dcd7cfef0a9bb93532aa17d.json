{"ast":null,"code":"import { catchError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../shared/service/auth.service\";\nimport * as i2 from \"@angular/router\";\nexport let AuthInterceptor = /*#__PURE__*/(() => {\n  class AuthInterceptor {\n    constructor(authService, router) {\n      this.authService = authService;\n      this.router = router;\n    }\n\n    intercept(req, next) {\n      const authToken = this.authService.getAuthorizationToken();\n      const authReq = req.clone({\n        headers: req.headers.set('Authorization', `Bearer ${authToken}`)\n      });\n      return next.handle(authReq).pipe(catchError(error => {\n        if (error.status === 401) {\n          this.authService.logout();\n          this.router.navigate(['/admin', 'login']);\n        }\n\n        throw new Error(error);\n      }));\n    }\n\n  }\n\n  AuthInterceptor.ɵfac = function AuthInterceptor_Factory(t) {\n    return new (t || AuthInterceptor)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n  };\n\n  AuthInterceptor.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthInterceptor,\n    factory: AuthInterceptor.ɵfac\n  });\n  return AuthInterceptor;\n})();","map":null,"metadata":{},"sourceType":"module"}